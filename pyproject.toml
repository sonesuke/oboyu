[project]
name = "oboyu"
dynamic = ["version"]
description = "A Japanese-enhanced semantic search system for your local documents."
readme = "README.md"
authors = [
    { name = "sonesuke", email = "iamsonesuke@gmail.com" }
]
requires-python = ">=3.13"
classifiers = [
    "Programming Language :: Python :: 3.13",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Natural Language :: Japanese",
    "Topic :: Text Processing :: Indexing",
]
license = { text = "MIT" }
keywords = ["semantic-search", "japanese", "text-processing", "vector-search", "document-search"]

# Include the src directory in the package
dependencies = [
    "chardet>=5.2.0",
    "charset-normalizer>=3.4.2",
    "fasttext>=0.9.3",
    "transformers>=4.52.4",
    "sentence-transformers>=4.1.0",
    "torch>=2.7.0",
    "duckdb>=1.3.0", # Version supporting VSS extension
    "protobuf>=6.31.1", # Required for SentenceTransformer with Ruri model
    "sentencepiece>=0.2.0", # Required for Japanese tokenization
    "fugashi>=1.4.3", # Japanese morphological analyzer for BM25
    "unidic-lite>=1.0.8", # Lightweight UniDic dictionary for BM25
    "jaconv>=0.4.0", # Japanese character conversion for BM25
    "ftfy>=6.1.0", # Fixes text encoding issues and mojibake
    "mojimoji>=0.0.12", # Japanese character conversion (full-width/half-width)
    "neologdn>=0.5.2", # Advanced Japanese text normalization
    "typer>=0.16.0", # CLI framework
    "rich>=14.0.0", # Rich terminal output formatting
    "pyyaml>=6.0.2", # YAML configuration file handling
    "mcp[cli]>=1.9.2", # Model Context Protocol for AI assistant integration
    "gitignore-parser>=0.1.12", # Support for respecting .gitignore files
    "xdg-base-dirs>=6.0.2",
    "onnx>=1.18.0",
    "onnxruntime>=1.22.0",
    "optimum>=1.25.3",
    "python-frontmatter>=1.1.0",
    "numpy>=2.2.6", # For numerical computations (core functionality)
    "prompt-toolkit>=3.0.51",
    "pydantic>=2.11.5",
    "pymupdf4llm>=0.0.25",
    "cryptography>=45.0.4",
    "llama-cpp-python>=0.3.9",
]

[project.scripts]
oboyu = "oboyu.cli.main:run"

[build-system]
requires = ["hatchling>=1.8.0", "hatch-vcs>=0.3.0"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/oboyu"]

[tool.hatch.build.targets.sdist]
include = [
    "/src/oboyu",
    "/README.md",
    "/LICENSE.md",
    "/pyproject.toml",
]

[tool.hatch.version]
source = "vcs"
raw-options = { local_scheme = "no-local-version", fallback_version = "0.1.0" }

# Remove [tool.uv.sources] as it's causing conflicts
# The package should be installed in editable mode via uv sync or uv pip install -e .

[dependency-groups]
dev = [
    "mypy>=1.16.0",
    "pre-commit>=4.2.0",
    "pytest>=8.3.5",
    "pytest-cov>=6.1.1",
    "ruff>=0.11.12",
    "hatch-vcs>=0.3.0",
    "psutil>=7.0.0", # System resource monitoring for benchmarks
    # Additional dependencies for RAG accuracy evaluation
    "datasets>=3.6.0", # For loading evaluation datasets
    "scipy>=1.15.3", # For advanced metric calculations
    "scikit-learn>=1.6.1", # For evaluation utilities
    "pandas>=2.2.3", # For data analysis and reporting
    "pexpect>=4.9.0", # For interactive CLI testing
    "pylint>=3.3.7",
    "build>=1.2.2.post1",
]

e2e-enhanced = [
    "playwright>=1.40.0", # Browser automation for visual verification
    "aiohttp>=3.9.0", # Async HTTP client for ttyd communication
    "websockets>=12.0", # WebSocket client for real-time terminal communication
]

[tool.mypy]
files = ["src"]
strict = true
disable_error_code = ["import-untyped", "no-any-return", "attr-defined", "call-arg", "assignment", "misc", "method-assign", "no-redef", "unused-ignore", "type-arg", "import-not-found"]

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]
python_files = ["test_*.py", "*_test.py"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "packaging: marks tests as packaging/installation related",
]
# Performance optimizations for fast tests
addopts = [
    "--tb=short",           # Shorter traceback format
    "--no-header",          # Skip header in output
    "--disable-warnings",   # Disable warnings for faster execution
]

[tool.coverage.run]
omit = []

[tool.ruff]
exclude = [".venv", "tests", "bench"]
target-version = "py313"
include = ["*.py"]
line-length = 160

[tool.ruff.lint]
select = [
  "C9",  # McCabe complexity
  "ANN",  # Type annotations
  "S",    # Security
  "E",    # Syntax errors
  "F",    # Pyflakes
  "W",    # Warnings
  "I",    # isort
  "D",    # Docstrings
]
ignore = [
  "D203",  # one-blank-line-before-class (we're using D211 instead)
  "D213",  # multi-line-summary-second-line (we're using D212 instead)
  "S608",  # Possible SQL injection vector through string-based query construction (we're using duckdb in-process. It doen't accept user input.)
  "W293",  # blank line contains whitespace
  "S101",  # Use of assert detected - OK for internal configuration validation
]

[tool.ruff.lint.isort]
combine-as-imports = true
known-first-party = ["oboyu"]
split-on-trailing-comma = true

[tool.ruff.format]
quote-style = "double"

[tool.ruff.lint.mccabe]
max-complexity = 20

[tool.pylint]
disable = "all"
enable = "too-many-lines"  # C0302
max-module-lines = 500
