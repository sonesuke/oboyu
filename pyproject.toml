[project]
name = "oboyu"
version = "0.1.0"
description = "A Japanese-enhanced semantic search system for your local documents."
readme = "README.md"
authors = [
    { name = "sonesuke", email = "iamsonesuke@gmail.com" }
]
requires-python = ">=3.13"
classifiers = [
    "Programming Language :: Python :: 3.13",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Natural Language :: Japanese",
    "Topic :: Text Processing :: Indexing",
]
license = { text = "MIT" }
keywords = ["semantic-search", "japanese", "text-processing", "vector-search", "document-search"]

# Include the src directory in the package
dependencies = [
    "chardet>=5.2.0",
    "charset-normalizer>=3.3.2",
    "langdetect>=1.0.9",
    "transformers>=4.48.0",
    "sentence-transformers",
    "torch",
    "duckdb>=0.9.0",  # Version supporting VSS extension
    "duckdb-engine",
    "protobuf>=4.25.1",  # Required for SentenceTransformer with Ruri model
    "sentencepiece>=0.2.0",  # Required for Japanese tokenization
    "typer>=0.9.0",  # CLI framework
    "rich>=13.4.2",  # Rich terminal output formatting
    "pyyaml>=6.0",  # YAML configuration file handling
    "mcp[cli]>=0.3.0"  # Model Context Protocol for AI assistant integration
]

[project.scripts]
oboyu = "oboyu.cli.main:run"

[build-system]
requires = ["hatchling>=1.8.0"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "mypy>=1.15.0",
    "pre-commit>=4.2.0",
    "pytest>=8.3.5",
    "pytest-cov>=6.1.1",
    "ruff>=0.11.10",
]

[tool.mypy]
files = ["src"]
strict = true
disable_error_code = ["import-untyped"]

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]
python_files = ["test_*.py", "*_test.py"]

[tool.coverage.run]
omit = []

[tool.ruff]
exclude = [".venv", "tests"]
target-version = "py313"
include = ["*.py"]
line-length = 120

[tool.ruff.lint]
select = [
  "C9",  # McCabe complexity
  "ANN",  # Type annotations
  "S",    # Security
  "E",    # Syntax errors
  "F",    # Pyflakes
  "W",    # Warnings
  "I",    # isort
  "D",    # Docstrings
]
ignore = [
  "D203",  # one-blank-line-before-class (we're using D211 instead)
  "D213",  # multi-line-summary-second-line (we're using D212 instead)
  "S608",  # Possible SQL injection vector through string-based query construction (we're using duckdb in-process. It doen't accept user input.)
]

[tool.ruff.lint.isort]
combine-as-imports = true
known-first-party = ["oboyu"]
split-on-trailing-comma = true

[tool.ruff.format]
quote-style = "double"

[tool.ruff.lint.mccabe]
max-complexity = 20