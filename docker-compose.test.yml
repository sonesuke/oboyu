services:
  # Test pip installation from source
  test-pip-source:
    build:
      context: .
      dockerfile: Dockerfile.test
      target: test-pip-source
    image: oboyu-test:pip-source
    container_name: oboyu-test-pip-source
    volumes:
      - ./test-results:/home/testuser/test-results
    environment:
      - TEST_NAME=pip-source

  # Test pip installation from wheel
  test-pip-wheel:
    build:
      context: .
      dockerfile: Dockerfile.test
      target: test-pip-wheel
    image: oboyu-test:pip-wheel
    container_name: oboyu-test-pip-wheel
    volumes:
      - ./test-results:/home/testuser/test-results
    environment:
      - TEST_NAME=pip-wheel
    depends_on:
      - build-wheel

  # Test UV installation
  test-uv:
    build:
      context: .
      dockerfile: Dockerfile.test
      target: test-uv
    image: oboyu-test:uv
    container_name: oboyu-test-uv
    volumes:
      - ./test-results:/home/testuser/test-results
    environment:
      - TEST_NAME=uv

  # Test installation with potential conflicts
  test-conflicts:
    build:
      context: .
      dockerfile: Dockerfile.test
      target: test-conflicts
    image: oboyu-test:conflicts
    container_name: oboyu-test-conflicts
    volumes:
      - ./test-results:/home/testuser/test-results
    environment:
      - TEST_NAME=conflicts

  # Build wheel for testing
  build-wheel:
    image: python:3.13-slim
    container_name: oboyu-build-wheel
    working_dir: /app
    volumes:
      - .:/app
    command: |
      bash -c "
        apt-get update && apt-get install -y git &&
        pip install --upgrade pip build &&
        python -m build --wheel &&
        echo 'Wheel built successfully'
      "

  # Run all tests
  test-runner:
    build:
      context: .
      dockerfile: Dockerfile.test
      target: test-runner
    image: oboyu-test:runner
    container_name: oboyu-test-runner
    volumes:
      - ./test-results:/home/testuser/test-results
    depends_on:
      - test-pip-source
      - test-pip-wheel
      - test-uv
      - test-conflicts
    command: |
      bash -c "
        echo 'Running all installation tests...' &&
        python /home/testuser/validate_installations.py | tee /home/testuser/test-results/all-tests.log
      "

  # Test installation from Test PyPI (simulated)
  test-pypi:
    image: python:3.13-slim
    container_name: oboyu-test-pypi
    working_dir: /app
    volumes:
      - .:/app
      - ./test-results:/test-results
    environment:
      - PIP_INDEX_URL=https://test.pypi.org/simple/
      - PIP_EXTRA_INDEX_URL=https://pypi.org/simple/
    command: |
      bash -c "
        useradd -m testuser &&
        su - testuser -c '
          python -m venv /home/testuser/venv-testpypi &&
          . /home/testuser/venv-testpypi/bin/activate &&
          pip install --upgrade pip &&
          echo \"Test PyPI installation would go here (package needs to be uploaded first)\" &&
          echo \"For now, testing local installation as proxy\" &&
          pip install /app &&
          python -c \"import oboyu; print(\\\"Test PyPI simulation successful\\\")\" &&
          oboyu --help
        ' | tee /test-results/test-pypi.log
      "

  # Performance test - measure installation time
  test-performance:
    image: python:3.13-slim
    container_name: oboyu-test-performance
    working_dir: /app
    volumes:
      - .:/app
      - ./test-results:/test-results
    command: |
      bash -c "
        apt-get update && apt-get install -y time &&
        useradd -m testuser &&
        su - testuser -c '
          echo \"Testing installation performance...\" &&
          python -m venv /home/testuser/venv-perf &&
          . /home/testuser/venv-perf/bin/activate &&
          pip install --upgrade pip &&
          echo \"Starting timed installation...\" &&
          /usr/bin/time -v pip install /app 2>&1 | tee /test-results/performance.log &&
          echo \"Installation completed\"
        '
      "

# Network for inter-container communication if needed
networks:
  default:
    name: oboyu-test-network